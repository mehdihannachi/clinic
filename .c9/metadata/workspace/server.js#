{"changed":true,"filter":false,"title":"server.js#","tooltip":"/server.js#","value":"/** @DocteuryServer */\n// server.js\nvar express = require('express');\nvar app = express();\nvar mongoose = require('mongoose');\nvar passport = require('passport');\nvar flash = require('connect-flash');\nvar async = require('async');\nvar morgan = require('morgan');\nvar cookieParser = require('cookie-parser');\nvar bodyParser = require('body-parser');\nvar session = require('express-session');\nvar MongoStore = require('connect-mongo')(session);\nvar appConfig = require('./config/app.js')\nvar security = require('./app/libs/security.js')\nvar port = appConfig.port;\nvar helmet = require('helmet')\nvar server = require('http').createServer(app);\n\nvar minifyHTML = require('express-minify-html');\nvar compression = require('compression');\nvar cluster = require('cluster');\nvar numCPUs = require('os').cpus().length;\n\nvar fileUpload = require('express-fileupload');\n// var recaptcha = require('express-recaptcha');\n// recaptcha.init('6Le6pgoUAAAAAGboed1UtKBNyAyVAu0wbg0Qy-Am', '6Le6pgoUAAAAAN18kj3HT5B8m31WwEhgzCRTHqik' , {\n//       onload:'cb',\n//       render:'explicit',\n//       hl:'fr',\n//       theme:'dark',\n//       type:'audio',\n//       callback:'callback',\n//       expired_callback:'expired_callback',\n//       size:'size',\n//       tabindex:'tabindex'\n//     });\n\n// app.use(compression());\n\nmongoose.Promise = global.Promise;\nmongoose.connect(appConfig.dbURL);\n\nrequire('./config/passport')(passport);\n\nif (appConfig.env && appConfig.env != \"dev\") {\n    app.use(morgan('short'));\n}\nelse\n    app.use(morgan('dev'));\n    \napp.use(helmet());\napp.use(cookieParser());\napp.use(bodyParser.json({\n    limit: '50mb'\n}));\napp.use(bodyParser.urlencoded({\n    limit: '50mb',\n    extended: true\n}));\napp.use(fileUpload());\napp.set('view engine', 'ejs');\n\napp.use(session({\n    secret: 'ses-462320',\n    unset: 'destroy',\n    resave: true,\n    saveUninitialized: true,\n    store: new MongoStore({\n        url: appConfig.dbURL\n    })\n}));\n\napp.use(passport.initialize());\napp.use(passport.session()); // \napp.use(flash());\napp.use(function (req, res, next) {\n    res.locals.env = appConfig.env;\n    next()\n})\n\n// app.use(minifyHTML({\n//     override:      true,\n//     htmlMinifier: {\n//         removeComments:            true,\n//         // collapseWhitespace:        true,\n//         collapseBooleanAttributes: true,\n//         removeAttributeQuotes:     true,\n//         removeEmptyAttributes:     true,\n//         // minifyJS:                  true\n//     }\n// }));\n\n\n\napp.use(express.static(__dirname + '/files'));\n\napp.use(express.static(__dirname + '/views/assets'));\napp.use(express.static(__dirname + '/public'));\napp.use(compression());\napp.use(security.ddos);\n  \nif (appConfig.env && appConfig.env != \"dev\") {\n    app.all('/css*', function(req, res, next) {\n      res.header('Expires', new Date(Date.now() + expireTime).toUTCString());\n      next();\n    }); \n    var expireTime = 604800000;\n    app.all('/js*', function(req, res, next) {\n      res.header('Expires', new Date(Date.now() + expireTime).toUTCString());\n      res.header('Last-Modified', new Date(Date.now() - expireTime *4).toUTCString());\n      next();\n    }); \n}\n\nrequire('./app/routes.js')(app, passport);\n\nif (appConfig.env && appConfig.env != \"dev\") {\n    if (cluster.isMaster) {\n        for (var i = 0; i < numCPUs; i++) {\n            cluster.fork(); // create a worker\n            console.info('cluster forked');\n        }\n\n        cluster.on('exit', function(worker, code, signal) {\n      \n        });\n    }\n    else {\n        app.listen(port);\n    }\n}\nelse {\n    app.listen(port);\n}\nconsole.log('Running ' + appConfig.name + ' server on port :  ' + port);\n","undoManager":{"mark":-2,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":136,"column":0},"action":"insert","lines":["/** @DocteuryServer */","// server.js","var express = require('express');","var app = express();","var mongoose = require('mongoose');","var passport = require('passport');","var flash = require('connect-flash');","var async = require('async');","var morgan = require('morgan');","var cookieParser = require('cookie-parser');","var bodyParser = require('body-parser');","var session = require('express-session');","var MongoStore = require('connect-mongo')(session);","var appConfig = require('./config/app.js')","var security = require('./app/libs/security.js')","var port = appConfig.port;","var helmet = require('helmet')","var server = require('http').createServer(app);","","var minifyHTML = require('express-minify-html');","var compression = require('compression');","var cluster = require('cluster');","var numCPUs = require('os').cpus().length;","","var fileUpload = require('express-fileupload');","// var recaptcha = require('express-recaptcha');","// recaptcha.init('6Le6pgoUAAAAAGboed1UtKBNyAyVAu0wbg0Qy-Am', '6Le6pgoUAAAAAN18kj3HT5B8m31WwEhgzCRTHqik' , {","//       onload:'cb',","//       render:'explicit',","//       hl:'fr',","//       theme:'dark',","//       type:'audio',","//       callback:'callback',","//       expired_callback:'expired_callback',","//       size:'size',","//       tabindex:'tabindex'","//     });","","// app.use(compression());","","mongoose.Promise = global.Promise;","mongoose.connect(appConfig.dbURL);","","require('./config/passport')(passport);","","if (appConfig.env && appConfig.env != \"dev\") {","    app.use(morgan('short'));","}","else","    app.use(morgan('dev'));","    ","app.use(helmet());","app.use(cookieParser());","app.use(bodyParser.json({","    limit: '50mb'","}));","app.use(bodyParser.urlencoded({","    limit: '50mb',","    extended: true","}));","app.use(fileUpload());","app.set('view engine', 'ejs');","","app.use(session({","    secret: 'ses-462320',","    unset: 'destroy',","    resave: true,","    saveUninitialized: true,","    store: new MongoStore({","        url: appConfig.dbURL","    })","}));","","app.use(passport.initialize());","app.use(passport.session()); // ","app.use(flash());","app.use(function (req, res, next) {","    res.locals.env = appConfig.env;","    next()","})","","// app.use(minifyHTML({","//     override:      true,","//     htmlMinifier: {","//         removeComments:            true,","//         // collapseWhitespace:        true,","//         collapseBooleanAttributes: true,","//         removeAttributeQuotes:     true,","//         removeEmptyAttributes:     true,","//         // minifyJS:                  true","//     }","// }));","","","","app.use(express.static(__dirname + '/files'));","","app.use(express.static(__dirname + '/views/assets'));","app.use(express.static(__dirname + '/public'));","app.use(compression());","app.use(security.ddos);","  ","if (appConfig.env && appConfig.env != \"dev\") {","    app.all('/css*', function(req, res, next) {","      res.header('Expires', new Date(Date.now() + expireTime).toUTCString());","      next();","    }); ","    var expireTime = 604800000;","    app.all('/js*', function(req, res, next) {","      res.header('Expires', new Date(Date.now() + expireTime).toUTCString());","      res.header('Last-Modified', new Date(Date.now() - expireTime *4).toUTCString());","      next();","    }); ","}","","require('./app/routes.js')(app, passport);","","if (appConfig.env && appConfig.env != \"dev\") {","    if (cluster.isMaster) {","        for (var i = 0; i < numCPUs; i++) {","            cluster.fork(); // create a worker","            console.info('cluster forked');","        }","","        cluster.on('exit', function(worker, code, signal) {","      ","        });","    }","    else {","        app.listen(port);","    }","}","else {","    app.listen(port);","}","console.log('Running ' + appConfig.name + ' server on port :  ' + port);",""],"id":1}]]},"ace":{"folds":[],"scrolltop":1512,"scrollleft":0,"selection":{"start":{"row":136,"column":0},"end":{"row":136,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":107,"state":"start","mode":"ace/mode/text"}},"timestamp":1483372563137}