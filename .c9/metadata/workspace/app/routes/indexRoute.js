{"changed":true,"filter":false,"title":"indexRoute.js","tooltip":"/app/routes/indexRoute.js","value":"    module.exports = function(app, passport) {\n        var indexController = require('./../controllers/indexController');\n        var userController = require('./../controllers/userController')\n        var location = require('countries-cities');\n        var user = require('./../models/user'),\n            admin = require('./../models/admin'),\n            doctor = require('./../models/doctor'),\n            nurse = require('./../models/nurse'),\n            patient = require('./../models/patient');\n\n        var location = require('./../models/location');\n        var loc = require('countries-cities');\n        var session = function(req, res) {\n            var temp = req.session.passport; // {user: 1}\n            req.session.regenerate(function(err) {\n                //req.session.passport is now undefined\n                req.session.passport = temp;\n                req.session.save(function(err) {\n                    res.send(200);\n                });\n            });\n        };\n        //Login\n        app.post('/fertillia/login', function(req, res, next) {\n\n                passport.authenticate('fertillia-patient-login', function(err, user, info) {\n\n\n                    if (info) {\n                        if (info.code) {\n                            res.json(info)\n                        }\n                        else {\n                            req.login(user, function(err) {\n                                if (err) {\n\n                                    return res.json({\n                                        error: info.message,\n\n                                    })\n                                }\n                                req.session.user = user;\n                                patient.findOne({\n                                    user_id: user._id\n                                }).populate(' location ').exec(function(err, p) {\n                                    if (err) {\n                                        return res.json({\n                                            error: err\n                                        });\n                                    }\n                                    else {\n                                        console.log(p.location)\n                                        return res.json({\n                                            error: false,\n                                            user_id: user._id,\n                                            user: p,\n                                            verified: info\n                                        })\n                                    }\n                                })\n                            });\n                        }\n\n                    }\n                    else {\n                        req.login(user, function(err) {\n                            if (err) {\n                                console.log(\"err2\")\n                                res.json({\n                                    error: true,\n                                })\n                            }\n                            req.session.user = user;\n                            patient.findOne({\n                                user_id: user._id\n                            }).populate(' location ').exec(function(err, p) {\n                                if (err) {\n                                    return res.json({\n                                        error: err\n                                    });\n                                }\n                                else {\n\n                                    console.log(p.location)\n                                    return res.json({\n                                        error: false,\n                                        user_id: user._id,\n                                        user: p,\n                                        verified: info\n                                    })\n                                }\n                            })\n                        });\n                    }\n                })(req, res, next);\n            }, session)\n            //Login\n        app.post('/ajax/login', function(req, res, next) {\n\n                passport.authenticate('local-login', function(err, user, info) {\n\n\n                    if (info) {\n                        if (info.code) {\n                            res.json(info)\n                        }\n                        else {\n                            req.login(user, function(err) {\n                                if (err) {\n\n                                    return res.json({\n                                        error: info.message,\n\n                                    })\n                                }\n                                req.session.user = user;\n                                admin.findOne({\n                                    user_id: user._id\n                                }).exec(function(err, p) {\n                                    if (err) {\n                                        return res.json({\n                                            error: err\n                                        });\n                                    }\n                                    else {\n                                        return res.json({\n                                            error: false,\n                                            user_id: user._id,\n                                            user: p,\n                                            verified: info\n                                        })\n                                    }\n                                })\n                            });\n                        }\n\n                    }\n                    else {\n                        req.login(user, function(err) {\n                            if (err) {\n                                console.log(\"err2\")\n                                res.json({\n                                    error: true,\n                                })\n                            }\n                            req.session.user = user;\n                            admin.findOne({\n                                user_id: user._id\n                            }).exec(function(err, p) {\n                                if (err) {\n                                    return res.json({\n                                        error: err\n                                    });\n                                }\n                                else {\n\n\n                                    return res.json({\n                                        error: false,\n                                        user_id: user._id,\n                                        user: p,\n                                        verified: info\n                                    })\n                                }\n                            })\n                        });\n                    }\n                })(req, res, next);\n            }, session)\n            //Signup\n        app.post('/ajax/signup-admin', function(req, res, next) {\n                passport.authenticate('local-signup-admin', function(err, user, info) {\n\n                    if (info) {\n                        res.json(info)\n                    }\n                    else {\n                        /*req.login(user, function(err) {\n                            if (err) {\n                                res.json({\n                                    error: true\n                                })\n                            }\n                            //req.session.user = user;\n                            res.json({\n                                error: false\n\n                            })\n                        });*/\n                        res.json({\n                            error: false\n                        })\n                    }\n                })(req, res, next);\n\n            })\n            //Forgot password\n        app.post('/ajax/forgotpassword', indexController.forgotpasswordPOSTajax);\n        //Forgot password Fertillia\n        app.post('/fertillia/forgotpassword', indexController.forgotpasswordFertillia);\n        //Forgot password Fertillia\n        app.post('/fertillia/passwordUpdate', indexController.fertilliaPasswordUpdate);\n        /* GUEST PAGES. */\n        /*app.get('/', userController.loadprofile, indexController.load);*/\n        app.get('/signup', function(req, res, next) {\n            res.render('/ajax/login', {\n                user: req.user\n            });\n        });\n        app.get('/', indexController.isConnect);\n        app.get('/dashboard', userController.isNotAdmin, function(req, res, next) {\n            res.render('views/dashboard', {\n                user: req.user\n            });\n        });\n        app.get('/all-users', userController.isLoggedIn, userController.isAdmin, userController.isNotAdmin, function(req, res, next) {\n            res.render('views/all-users');\n        });\n        app.get('/articles', userController.isLoggedIn, userController.isNotAdmin, function(req, res, next) {\n            res.render('views/articles');\n        });\n        app.get('/calendar', userController.isLoggedIn, userController.isNotAdmin, function(req, res, next) {\n            res.render('views/calendar');\n        });\n        app.get('/common', userController.isLoggedIn, userController.isNotAdmin, function(req, res, next) {\n            res.render('views/common-2');\n        });\n        app.get('/doctors', userController.isLoggedIn, userController.isNotAdmin, function(req, res, next) {\n            res.render('views/doctors');\n        });\n        app.get('/messages', userController.isLoggedIn, userController.isNotAdmin, function(req, res, next) {\n            res.render('views/messages');\n        });\n        app.get('/appointment', userController.isLoggedIn, userController.isNotAdmin, function(req, res, next) {\n            res.render('views/modal-uppoinment');\n        });\n        app.get('/reminder', userController.isLoggedIn, userController.isNotAdmin, function(req, res, next) {\n            res.render('views/modal-reminder');\n        });\n        app.get('/new-article', userController.isLoggedIn, userController.isNotAdmin, function(req, res, next) {\n            res.render('views/new-article');\n        });\n        app.get('/update-article', userController.isLoggedIn, userController.isNotAdmin, function(req, res, next) {\n            res.render('views/update-article');\n        });\n        app.get('/new-chat', userController.isLoggedIn, userController.isNotAdmin, function(req, res, next) {\n            res.render('views/new-chat');\n        });\n        app.get('/new-doctor', userController.isLoggedIn, userController.isNotAdmin, userController.isAdmin, function(req, res, next) {\n            res.render('views/new-doctor');\n        });\n        app.get('/new-nurse', userController.isLoggedIn, userController.isNotAdmin, userController.isAdmin, function(req, res, next) {\n            res.render('views/new-nurse');\n        });\n        app.get('/new-admin', userController.isLoggedIn, userController.isNotAdmin, userController.isAdmin, function(req, res, next) {\n            res.render('views/new-admin');\n        });\n        app.get('/new-patient', userController.isLoggedIn, userController.isNotAdmin, function(req, res, next) {\n            location.find({}, function(err, locations) {\n                res.render('views/new-patient', {\n                    locations: locations\n                });\n            });\n        });\n        app.get('/fertillia/locations', function(req, res, next) {\n            location.find({}, function(err, locations) {\n                res.json(locations);\n            });\n        });\n        app.get('/fertillia/locations/save', function(req, res, next) {\n            var resultat;\n            var countriees = loc.getCountries(); //get all countries \n\n            //parcours tous les cities de countries[i]\n            for (var i = 0; i < countriees.length; i++) {\n\n                var citiees = loc.getCities(countriees[i])\n                if (citiees && (citiees.length > 0)) {\n                    var locations = new location();\n                    locations.country = countriees[i]\n                    locations.cities = citiees\n                    locations.save(function(err) {\n                        if (err)\n                            res.json(err);\n                    });\n                }\n            }\n            res.json({\n                resultat: resultat\n            });\n\n        });\n        app.get('/new-user', userController.isLoggedIn, userController.isAdmin, userController.isNotAdmin, function(req, res, next) {\n            res.render('views/new-user');\n        });\n        app.get('/nurses', userController.isLoggedIn, userController.isNotAdmin, userController.isAdmin, function(req, res, next) {\n            res.render('views/nurses');\n        });\n        app.get('/admins', userController.isLoggedIn, userController.isNotAdmin, userController.isAdmin, function(req, res, next) {\n            res.render('views/admins');\n        });\n        app.get('/patients', userController.isLoggedIn, userController.isNotAdmin, function(req, res, next) {\n            res.render('views/patients');\n        });\n        app.get('/profile-doctor', userController.isLoggedIn, userController.isNotAdmin, function(req, res, next) {\n            res.render('views/profile-doctor');\n        });\n        app.get('/profile-admin', userController.isLoggedIn, userController.isNotAdmin, userController.isAdmin, function(req, res, next) {\n            res.render('views/profile-admin');\n        });\n        app.get('/profile-nurse', userController.isLoggedIn, userController.isNotAdmin, userController.isAdmin, function(req, res, next) {\n            res.render('views/profile-nurse');\n        });\n        app.get('/profile-patient', userController.isLoggedIn, userController.isNotAdmin, function(req, res, next) {\n            res.render('views/profile-patient');\n        });\n        app.get('/single-chat', userController.isLoggedIn, userController.isNotAdmin, function(req, res, next) {\n            res.render('views/single-chat');\n        });\n        app.get('/rdv-demands', userController.isLoggedIn, userController.isNotAdmin, function(req, res, next) {\n            res.render('views/rdv-demands');\n        });\n        app.get('/update-admin', userController.isLoggedIn, userController.isNotAdmin, userController.isAdmin, function(req, res, next) {\n            res.render('views/update-admin');\n        });\n        app.get('/update-doctor', userController.isLoggedIn, userController.isNotAdmin, userController.isAdmin, function(req, res, next) {\n            res.render('views/update-doctor');\n        });\n        app.get('/update-nurse', userController.isLoggedIn, userController.isNotAdmin, userController.isAdmin, function(req, res, next) {\n            res.render('views/update-nurse');\n        });\n        app.get('/update-patient', userController.isLoggedIn, userController.isNotAdmin, function(req, res, next) {\n            location.find({}, function(err, locations) {\n                res.render('views/update-patient', {\n                    locations: locations\n                });\n            });\n        });\n        \n        app.get('/update-user', userController.isLoggedIn, userController.isNotAdmin, function(req, res, next) {\n            res.render('views/update-user');\n        });\n        app.get('/stats', userController.isLoggedIn, userController.isNotAdmin, function(req, res, next) {\n            res.render('views/stats');\n        });\n        app.get('/404', function(req, res, next) {\n            res.render('views/404');\n        });\n        app.get('/messagesHistory', function(req, res, next) {\n            res.render('views/messagesHistory');\n        });\n        app.get('/single-chat-history', function(req, res, next) {\n            res.render('views/single-chat-history');\n        });\n        app.get('/password_reset/:hash', indexController.passwordresetGET);\n        //reset password for fertillia\n        app.get('/fertillia/password_reset/:hash', indexController.fertilliaPasswordReset);\n        app.get('/logout', function(req, res) {\n            delete req.session.resData;\n            delete req.session.mailsent;\n            req.logout();\n            res.redirect('/');\n        });\n        //logout for fertillia\n        app.get('/fertillia/logout', function(req, res) {\n            delete req.session.resData;\n            delete req.session.mailsent;\n            req.logout();\n            res.json({\n                error: false,\n                message: \"Logout avec succes\"\n            });\n        });\n    }\n    ","undoManager":{"mark":-2,"position":-1,"stack":[[{"start":{"row":257,"column":30},"end":{"row":257,"column":31},"action":"remove","lines":[","],"id":68}],[{"start":{"row":257,"column":31},"end":{"row":257,"column":57},"action":"remove","lines":[" userController.isLoggedIn"],"id":69}]]},"ace":{"folds":[{"start":{"row":23,"column":63},"end":{"row":95,"column":12},"placeholder":"..."},{"start":{"row":97,"column":58},"end":{"row":168,"column":12},"placeholder":"..."},{"start":{"row":331,"column":115},"end":{"row":337,"column":8},"placeholder":"..."}],"scrolltop":311,"scrollleft":0,"selection":{"start":{"row":201,"column":20},"end":{"row":201,"column":20},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":true,"wrapToView":true},"firstLineState":{"row":19,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1500000845443}