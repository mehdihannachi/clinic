{"filter":false,"title":"stats.ejs","tooltip":"/views/views/stats.ejs","ace":{"folds":[],"scrolltop":3125,"scrollleft":0,"selection":{"start":{"row":243,"column":0},"end":{"row":243,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":207,"state":"js-start","mode":"ace/mode/ejs"}},"hash":"da3c16b09992283b9983e52e4af3ecabf4909d36","undoManager":{"mark":16,"position":16,"stack":[[{"start":{"row":48,"column":22},"end":{"row":49,"column":0},"action":"insert","lines":["",""],"id":4218},{"start":{"row":49,"column":0},"end":{"row":49,"column":16},"action":"insert","lines":["                "]}],[{"start":{"row":49,"column":16},"end":{"row":49,"column":17},"action":"insert","lines":["w"],"id":4219}],[{"start":{"row":49,"column":16},"end":{"row":49,"column":17},"action":"remove","lines":["w"],"id":4220}],[{"start":{"row":49,"column":16},"end":{"row":49,"column":17},"action":"insert","lines":["s"],"id":4221}],[{"start":{"row":49,"column":16},"end":{"row":49,"column":17},"action":"remove","lines":["s"],"id":4222}],[{"start":{"row":49,"column":16},"end":{"row":49,"column":17},"action":"insert","lines":["s"],"id":4223}],[{"start":{"row":49,"column":16},"end":{"row":49,"column":17},"action":"remove","lines":["s"],"id":4224}],[{"start":{"row":49,"column":16},"end":{"row":49,"column":17},"action":"insert","lines":["<"],"id":4225}],[{"start":{"row":49,"column":17},"end":{"row":49,"column":18},"action":"insert","lines":["s"],"id":4226}],[{"start":{"row":49,"column":18},"end":{"row":49,"column":19},"action":"insert","lines":["c"],"id":4227}],[{"start":{"row":49,"column":19},"end":{"row":49,"column":20},"action":"insert","lines":["r"],"id":4228}],[{"start":{"row":49,"column":20},"end":{"row":49,"column":21},"action":"insert","lines":["i"],"id":4229}],[{"start":{"row":49,"column":21},"end":{"row":49,"column":22},"action":"insert","lines":["p"],"id":4230}],[{"start":{"row":49,"column":22},"end":{"row":49,"column":23},"action":"insert","lines":["t"],"id":4231}],[{"start":{"row":49,"column":23},"end":{"row":49,"column":33},"action":"insert","lines":["></script>"],"id":4232}],[{"start":{"row":49,"column":24},"end":{"row":51,"column":16},"action":"insert","lines":["","                    ","                "],"id":4233}],[{"start":{"row":50,"column":20},"end":{"row":243,"column":0},"action":"insert","lines":["","","gapi.analytics.ready(function() {","","    /**","     * Authorize the user immediately if the user has already granted access.","     * If no access has been created, render an authorize button inside the","     * element with the ID \"embed-api-auth-container\".","     */","    gapi.analytics.auth.authorize({","        container: 'embed-api-auth-container',","        clientid: '399059803263-96s52gj2ekorl76qjbhlodc84nmc6fj3.apps.googleusercontent.com'","    });","","","    /**","     * Create a new ViewSelector instance to be rendered inside of an","     * element with the id \"view-selector-container\".","     */","    var viewSelector = new gapi.analytics.ViewSelector({","        container: 'view-selector-container'","    });","","    // Render the view selector to the page.","    viewSelector.execute();","","","    /**","     * Create a new DataChart instance with the given query parameters","     * and Google chart options. It will be rendered inside an element","     * with the id \"chart-container\".","     */","    var dataChart = new gapi.analytics.googleCharts.DataChart({","        query: {","            metrics: 'ga:sessions',","            dimensions: 'ga:date',","            'start-date': '30daysAgo',","            'end-date': 'yesterday'","        },","        chart: {","            container: 'chart-container',","            type: 'LINE',","            options: {","                width: '100%'","            }","        }","    });","","    /**","     * Create the first DataChart for top countries over the past 30 days.","     * It will be rendered inside an element with the id \"chart-1-container\".","     */","    var dataChart1 = new gapi.analytics.googleCharts.DataChart({","        query: {","            metrics: 'ga:sessions',","            dimensions: 'ga:country',","            'start-date': '30daysAgo',","            'end-date': 'yesterday',","            'max-results': 6,","            sort: '-ga:sessions'","        },","        chart: {","            container: 'chart-1-container',","            type: 'PIE',","            options: {","                width: '100%',","                pieHole: 4 / 9","            }","        }","    });","    /**","     * Render the dataChart on the page whenever a new view is selected.","     */","    viewSelector.on('change', function(ids) {","        dataChart.set({","            query: {","                ids: ids","            }","        }).execute();","        dataChart1.set({","            query: {","                ids: ids","            }","        }).execute();","    });","","","","    var mainChart = new gapi.analytics.googleCharts.DataChart({","        query: {","            'dimensions': 'ga:browser',","            'metrics': 'ga:sessions',","            'sort': '-ga:sessions',","            'max-results': '6'","        },","        chart: {","            type: 'TABLE',","            container: 'main-chart-container',","            options: {","                width: '100%'","            }","        }","    });","","","    /**","     * Create a timeline chart showing sessions over time for the browser the","     * user selected in the main chart.","     */","    var breakdownChart = new gapi.analytics.googleCharts.DataChart({","        query: {","            'dimensions': 'ga:date',","            'metrics': 'ga:sessions',","            'start-date': '7daysAgo',","            'end-date': 'yesterday'","        },","        chart: {","            type: 'LINE',","            container: 'breakdown-chart-container',","            options: {","                width: '100%'","            }","        }","    });","","","    /**","     * Store a refernce to the row click listener variable so it can be","     * removed later to prevent leaking memory when the chart instance is","     * replaced.","     */","    var mainChartRowClickListener;","","","    /**","     * Update both charts whenever the selected view changes.","     */","    viewSelector.on('change', function(ids) {","        var options = {","            query: {","                ids: ids","            }","        };","","        // Clean up any event listeners registered on the main chart before","        // rendering a new one.","        if (mainChartRowClickListener) {","            google.visualization.events.removeListener(mainChartRowClickListener);","        }","","        mainChart.set(options).execute();","        breakdownChart.set(options);","","        // Only render the breakdown chart if a browser filter has been set.","        if (breakdownChart.get().query.filters) breakdownChart.execute();","    });","","","    /**","     * Each time the main chart is rendered, add an event listener to it so","     * that when the user clicks on a row, the line chart is updated with","     * the data from the browser in the clicked row.","     */","    mainChart.on('success', function(response) {","","        var chart = response.chart;","        var dataTable = response.dataTable;","","        // Store a reference to this listener so it can be cleaned up later.","        mainChartRowClickListener = google.visualization.events","            .addListener(chart, 'select', function(event) {","","                // When you unselect a row, the \"select\" event still fires","                // but the selection is empty. Ignore that case.","                if (!chart.getSelection().length) return;","","                var row = chart.getSelection()[0].row;","                var browser = dataTable.getValue(row, 0);","                var options = {","                    query: {","                        filters: 'ga:browser==' + browser","                    },","                    chart: {","                        options: {","                            title: browser","                        }","                    }","                };","","                breakdownChart.set(options).execute();","            });","    });","});",""],"id":4234}]]},"timestamp":1499276805024}